version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn test_kanalservis_project.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    volumes:
      - static_volume:/home/backend/static
      - media_volume:/home/backend/media
    # Файл содержащий переменные для контейнера
    env_file:
      - ./.env.prod
    depends_on:
      - db

  db:
    # Образ и версия базы, которую мы будем использовать
    image: postgres:latest
    # Внешний том(volume) и место где он будет подключен внутри контейнера
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/backend/static
      - media_volume:/home/backend/media
    ports:
      - 80:80
    depends_on:
      - backend

  redis:
    image: redis:alpine

  celery:
    restart: always
    build:
      context: .
    command: celery -A test_kanalservis_project worker -l info
    volumes:
      - ./test_kanalservis_project:/test_kanalservis_project
    env_file:
      - ./.env.prod
    depends_on:
      - db
      - redis
      - backend

  celery_beat:
    restart: always
    build:
      context: .
    command: celery -A test_kanalservis_project beat -l info
    volumes:
      - ./test_kanalservis_project:/test_kanalservis_project
    env_file:
      - ./.env.prod
    depends_on:
      - celery

  frontend:
    build: ./frontend

    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm start

volumes:
  postgres_volume:
  static_volume:
  media_volume: